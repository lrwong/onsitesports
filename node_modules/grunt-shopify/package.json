{
  "_args": [
    [
      "https://github.com/mjaverto/grunt-shopify/tarball/master",
      "C:\\xampp\\htdocs\\onsitesports"
    ]
  ],
  "_from": "https://github.com/mjaverto/grunt-shopify/tarball/master",
  "_id": "grunt-shopify@0.3.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/grunt-shopify",
  "_phantomChildren": {},
  "_requested": {
    "name": null,
    "raw": "https://github.com/mjaverto/grunt-shopify/tarball/master",
    "rawSpec": "https://github.com/mjaverto/grunt-shopify/tarball/master",
    "scope": null,
    "spec": "https://github.com/mjaverto/grunt-shopify/tarball/master",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://github.com/mjaverto/grunt-shopify/tarball/master",
  "_shasum": "5fed7335ccf5c257f3a0ec86f7f5a270e5e6de9a",
  "_shrinkwrap": null,
  "_spec": "https://github.com/mjaverto/grunt-shopify/tarball/master",
  "_where": "C:\\xampp\\htdocs\\onsitesports",
  "author": {
    "email": "will@fullscreen.io",
    "name": "Will Rossiter",
    "url": "http://wilr.github.io"
  },
  "bugs": {
    "url": "https://github.com/wilr/grunt-shopify/issues"
  },
  "dependencies": {
    "glob": "~3.2.3"
  },
  "description": "Grunt plug-in for publishing Shopify theme templates and assets.",
  "devDependancies": {
    "grunt-contrib-jshint": "~0.1.1"
  },
  "devDependencies": {},
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/wilr/grunt-shopify",
  "keywords": [
    "gruntplugin",
    "shopify"
  ],
  "licenses": [
    {
      "type": "BSD-3-Clause",
      "url": "https://github.com/wilr/grunt-shopify/blob/master/LICENSE"
    }
  ],
  "main": "Gruntfile.js",
  "name": "grunt-shopify",
  "optionalDependencies": {},
  "peerDependencies": {
    "growl": "~1.7",
    "grunt": "~0.4.1",
    "grunt-contrib-watch": "~0.4.4"
  },
  "readme": "# grunt-shopify\n\n> Grunt plug-in for publishing Shopify theme assets\n\nThis plug-in handles publishing file changes, uploading new files and removing\ndeleted files from your local filesystem to a Shopify account in real time.\n\nInspired by the useful [TextMate bundle](http://wiki.shopify.com/Shopify_Textmate_Bundle), \nthis grunt plug-in is designed to be IDE / Editor independent as well as work \neasily on image and other assets being added / removed in the background.\n\n**Note**: Because this plug-in will update your current Shopify theme, it is \nrecommended to be used in conjunction with a version control system (you are\nusing version control right?) to ensure that you don't delete a file you \nshouldn't.\n\n**Note**: Your API key and Password to your Shopify site gives other developers\nfull access to the shop. If you want to secure this information you should use \nan environment property and update the grunt file to read from the current node \nenvironment.\n\n## Getting Started\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out \nthe [Getting Started](http://gruntjs.com/getting-started) guide, as it explains \nhow to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as \ninstall and use Grunt plugins. \n\nOnce you're familiar with that process, install this plug-in by running this \ncommand in:\n\n```shell\nnpm install grunt-shopify --save-dev\n```\n\nThis plug-in uses [grunt-watch](https://github.com/gruntjs/grunt-contrib-watch) \nto watch and notify of any local file system changes.\n\nTo setup the plug-in you need to make the following changes to your project's \nGruntfile.\n\nStep 1. Add a section named `shopify` to the data object passed into \n`grunt.initConfig()`. This should include your api key and password for a \nprivate application setup under your store (http://wiki.shopify.com/Private_applications).\n\nAs mentioned, for secure environments use environment variables instead of hard\ncoding this information.\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-watch');\ngrunt.loadNpmTasks('grunt-shopify');\n\ngrunt.initConfig({\n  shopify: {\n    options: {\n      api_key: \"API KEY\",\n      password: \"PASSWORD\",\n      url: \"storename.myshopify.com\",\n      base: \"shop/\",\n      ThemeId: '', // you can find this id in the url to the theme in shopify editor like this : https://my-shopify.myshopify.com/admin/themes/4733339 . leave it empty to use Published theme\n    }\n  },\n})\n```\n\nStep 2. Add a section named `watch` to describe what files and directories you \nwant to sync to shopify.\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-watch');\ngrunt.loadNpmTasks('grunt-shopify');\n\ngrunt.initConfig({\n  shopify: {\n    // ...\n  },\n  watch: {\n    shopify: {\n      files: [\"shop/**\"],\n      tasks: [\"shopify\"]\n    }\n  }\n});\n```\n\nRun `grunt watch:shopify` to watch for local changes. \n\n### Running shopify after other watched files\n\nIf you're using coffeescript or some other language which needs to be compiled\nbefore being uploaded to the shopify store, use watch to have the coffee\ntasks run on `.coffee` files and have shopify watch the resulting `.js` files.\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-watch');\ngrunt.loadNpmTasks('grunt-shopify');\n\ngrunt.initConfig({\n  shopify: {\n    // ...\n  },\n  watch: {\n    coffee: {\n      files: [\"shop/javascript/*.coffee\"],\n      tasks: [\"coffee\"]\n    },\n    shopify: {\n      files: [\"shop/assets/**\", \"shop/javascript/*.js\", \"shop/snippets/**\", \"shop/layout/**\"],\n      tasks: [\"shopify\"]\n    }\n  }\n});\n```\n\n### Options\n\n#### api_key\n\nType: `String`\nDefault value: `''`\n\nThe API Key from your Shopify account. To get an API key, register a new private \napplication through your Shopify dashboard.\n\n#### password\n\nType: `String`\nDefault value: `''`\n\nThe API Password for the private application. This should be available to you \nonce you create your private application.\n\n#### url\n\nType: `String`\nDefault value: `''`\n\nYour shopify store url. Even if you have a custom domain setup, use the Shopify\ndomain as your API url (e.g `storename.myshopify.com`)\n\n#### base\n\nType: `String`\nDefault value: `''`\n\nIf you've got your shopify files stored in a subdirectory locally (e.g in a \nshop/ folder), base should the name of the folder with the trailing slash (i.e shop/).\n\n#### disable_growl_notifications\n\nType: `Boolean`\nDefault value: `false`\n\nBy default the script will pipe notices to Growl through [node-growl](https://github.com/visionmedia/node-growl),\nif you prefer this to stay in the background set disable_growl_notifications to\nfalse.\n\n#### disable_grunt_log\n\nType: `Boolean`\nDefault value: `false`\n\nOn top of using Growl notifications for application status, error messages are\noutput in via grunt log. Turning off the grunt log will keep your terminal clear\nin \n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. \nAdd unit tests for any new or changed functionality. Lint and test your code \nusing [Grunt](http://gruntjs.com/).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/wilr/grunt-shopify.git"
  },
  "version": "0.3.0"
}
